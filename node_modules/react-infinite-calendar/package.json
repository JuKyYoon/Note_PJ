{
  "_args": [
    [
      {
        "raw": "react-infinite-calendar",
        "scope": null,
        "escapedName": "react-infinite-calendar",
        "name": "react-infinite-calendar",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\yoong\\Desktop\\noote"
    ]
  ],
  "_from": "react-infinite-calendar@latest",
  "_id": "react-infinite-calendar@2.2.0",
  "_inCache": true,
  "_location": "/react-infinite-calendar",
  "_nodeVersion": "6.3.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/react-infinite-calendar-2.2.0.tgz_1493162917090_0.6709384163841605"
  },
  "_npmUser": {
    "name": "clauderic",
    "email": "clauderic.d@gmail.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {
    "fbjs": "0.8.12"
  },
  "_requested": {
    "raw": "react-infinite-calendar",
    "scope": null,
    "escapedName": "react-infinite-calendar",
    "name": "react-infinite-calendar",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-infinite-calendar/-/react-infinite-calendar-2.2.0.tgz",
  "_shasum": "d34d80b5c89a3e37e75e0c542cd3578049dbdc73",
  "_shrinkwrap": null,
  "_spec": "react-infinite-calendar",
  "_where": "C:\\Users\\yoong\\Desktop\\noote",
  "author": {
    "name": "Clauderic Demers",
    "email": "me@ced.io"
  },
  "bugs": {
    "url": "https://github.com/clauderic/react-infinite-calendar/issues"
  },
  "dependencies": {
    "classnames": "^2.2.5",
    "date-fns": "^1.27.2",
    "dom-helpers": "^3.2.1",
    "prop-types": "^15.5.7",
    "react-tiny-virtual-list": "^2.0.0",
    "recompose": "^0.22.0"
  },
  "description": "Infinite scrolling date-picker built with React, with localization, themes, keyboard support, and more.",
  "devDependencies": {
    "@kadira/storybook": "^2.35.3",
    "@kadira/storybook-addon-options": "^1.0.1",
    "babel-eslint": "^7.0.0",
    "babel-plugin-css-modules-transform": "^1.2.1",
    "eslint": "^3.8.1",
    "eslint-config-react-app": "^0.5.1",
    "eslint-plugin-flowtype": "^2.21.0",
    "eslint-plugin-import": "^2.0.1",
    "eslint-plugin-jsx-a11y": "^2.2.3",
    "eslint-plugin-react": "^6.4.1",
    "node-sass": "^4.5.0",
    "nwb": "^0.15.6",
    "nwb-sass": "^0.7.1",
    "react": "^15.4.2",
    "react-addons-css-transition-group": "^15.4.2",
    "react-dom": "^15.4.2"
  },
  "directories": {},
  "dist": {
    "shasum": "d34d80b5c89a3e37e75e0c542cd3578049dbdc73",
    "tarball": "https://registry.npmjs.org/react-infinite-calendar/-/react-infinite-calendar-2.2.0.tgz"
  },
  "files": [
    "css",
    "es",
    "lib",
    "umd",
    "styles.css"
  ],
  "gitHead": "a9692b57096cdcabc7d2b7b70351a8ef2b578f16",
  "homepage": "https://github.com/clauderic/react-infinite-calendar",
  "keywords": [
    "react",
    "reactjs",
    "react-component",
    "infinite",
    "calendar",
    "endless",
    "date",
    "date-picker",
    "month",
    "day",
    "year",
    "scrolling",
    "virtual",
    "picker",
    "material",
    "flat"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "clauderic",
      "email": "clauderic.d@gmail.com"
    }
  ],
  "module": "es/index.js",
  "name": "react-infinite-calendar",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^15.3.0 || ^16.0.0-alpha",
    "react-addons-css-transition-group": "^15.4.2"
  },
  "readme": "<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/clauderic/react-infinite-calendar/master/.github/logo.png\" width=\"180\"/>\n</div>\n\n# React Infinite Calendar\n[![npm version](https://img.shields.io/npm/v/react-infinite-calendar.svg)](https://www.npmjs.com/package/react-infinite-calendar)\n[![downloads](https://img.shields.io/npm/dm/react-infinite-calendar.svg)](https://www.npmjs.com/package/react-infinite-calendar)\n[![license](https://img.shields.io/github/license/mashape/apistatus.svg?maxAge=2592000)](https://github.com/clauderic/react-infinite-calendar/blob/master/LICENSE)\n[![Gitter](https://badges.gitter.im/clauderic/react-infinite-calendar.svg)](https://gitter.im/clauderic/react-infinite-calendar)\n### Examples available here: <a href=\"#\">http://clauderic.github.io/react-infinite-calendar/</a>\n\nFeatures\n---------------\n\n* **Infinite scroll** – Just keep scrollin', just keep scrollin'\n* **Flexible** – Min/max date, disabled dates, disabled days, etc.\n* **Extensible** – Add date range-selection, multiple date selection, or create your own HOC!\n* **Localization and translation** – En français, s'il vous plaît!\n* **Customizeable** – Customize and theme to your heart's content.\n* **Year selection** – For rapidly jumping from year to year\n* **Keyboard support** – ⬆️ ⬇️ ⬆️ ⬇️ ⬅️ ➡️ ⬅️ ➡️ ↩️\n* **Events and callbacks** – beforeSelect, onSelect, onScroll, etc.\n* **Mobile-friendly** – Silky smooth scrolling on mobile\n\n<div style=\"padding:30px\">\n<img src=\"https://raw.githubusercontent.com/clauderic/react-infinite-calendar/master/.github/preview.gif\" width=\"300\" />\n</div>\n\nGetting Started\n---------------\n\nUsing [npm](https://www.npmjs.com/):\n```\nnpm install react-infinite-calendar react-addons-css-transition-group --save\n```\n\nES6, CommonJS, and UMD builds are available with each distribution. For example:\n```js\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport 'react-infinite-calendar/styles.css'; // Make sure to import the default stylesheet\n```\n\nYou can also use a global-friendly UMD build:\n```html\n<link rel=\"stylesheet\" href=\"react-infinite-calendar/styles.css\">\n<script src=\"react-infinite-calendar/umd/react-infinite-calendar.js\"></script>\n<script>\nvar InfiniteCalendar = window.InfiniteCalendar.default;\n...\n</script>\n```\n\nUsage\n------------\n### Basic Example\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport 'react-infinite-calendar/styles.css'; // only needs to be imported once\n\n// Render the Calendar\nvar today = new Date();\nvar lastWeek = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 7);\n\nrender(\n  <InfiniteCalendar\n    width={400}\n    height={600}\n    selected={today}\n    disabledDays={[0,6]}\n    minDate={lastWeek}\n  />,\n  document.getElementById('root')\n);\n```\nFor more usage examples, see [http://clauderic.github.io/react-infinite-calendar/](http://clauderic.github.io/react-infinite-calendar/) or check out some [code examples](https://github.com/clauderic/react-infinite-calendar/tree/master/examples).\n\n### Prop Types\n| Property       | Type            | Default                                                                                                                              | Description                                                                                                                                                                                                                      |\n|:---------------|:----------------|:-------------------------------------------------------------------------------------------------------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| selected       | Date or Boolean | `new Date()`                                                                                                                         | Value of the date that appears to be selected. Set to `false` if you don't wish to have a date initially selected.                                                                                                               |\n| width          | Number          | `400`                                                                                                                                | Width of the calendar, in pixels                                                                                                                                                                                                 |\n| height         | Number          | `600`                                                                                                                                | Height of the calendar, in pixels                                                                                                                                                                                                |\n| min            | Date            | `new Date(1980, 0, 1)`                                                                                                               | The minimum month that can be scrolled to.                                                                                                                                                                                       |\n| max            | Date            | `new Date(2050, 11, 31)`                                                                                                             | The maximum month that can be scrolled to.                                                                                                                                                                                       |\n| minDate        | Date            | `new Date(1980, 0, 1)`                                                                                                               | The minimum date that is selectable.                                                                                                                                                                                             |\n| maxDate        | Date            | `new Date(2050, 11, 31)`                                                                                                             | The maximum date that is selectable.                                                                                                                                                                                             |\n| disabledDays   | Array<Number>   |                                                                                                                                      | Array of days of the week that should be disabled. For example, to disable Monday and Sunday: `[0, 6]`                                                                                                                           |\n| disabledDates  | Array<Date>     |                                                                                                                                      | Array of dates that should be disabled. For example: `[new Date(2017, 1, 8), new Date(), new Date(2017, 5, 17)]`                                                                                                                 |\n| display        | String          | `'days'`                                                                                                                             | Whether to display the `years` or `days` view.                                                                                                                                                                                   |\n| displayOptions | Object          | See&nbsp;[default&nbsp;displayOptions](https://github.com/clauderic/react-infinite-calendar/blob/master/src/utils/displayOptions.js) | See [display options](#display-options) section for more details.                                                                                                                                                                |\n| locale         | Object          | See&nbsp;[default&nbsp;locale](https://github.com/clauderic/react-infinite-calendar/blob/master/src/utils/defaultLocale.js)          | By default, React Infinite Calendar comes with the `English` locale. You can use this to change the language, or change the first day of the week. See [date-fns documentation](https://date-fns.org/docs/I18n) for more details |\n| theme          | Object          | See&nbsp;[default&nbsp;theme](https://github.com/clauderic/react-infinite-calendar/blob/master/src/utils/defaultTheme.js)            | Basic customization of the colors                                                                                                                                                                                                |\n| className      | String          |                                                                                                                                      | Optional CSS class name to append to the root `InfiniteCalendar` element.                                                                                                                                                        |\n| onSelect       | Function        |                                                                                                                                      | Callback invoked after beforeSelect() returns true, but before the state of the calendar updates                                                                                                                                 |\n| onScroll       | Function        |                                                                                                                                      | Callback invoked when the scroll offset changes. `function (scrollTop: number) {}`                                                                                                                                               |\n| onScrollEnd    | Function        |                                                                                                                                      | Callback invoked `150ms` after the last onScroll event is triggered. `function (scrollTop: number) {}`                                                                                                                           |\n| rowHeight      | Number          | `56`                                                                                                                                 | Height of each row in the calendar (each week is considered a `row`)                                                                                                                                                             |\n| autoFocus      | Boolean         | `true`                                                                                                                               | Whether the Calendar root should be auto-focused when it mounts. This is useful when `keyboardSupport` is enabled (the calendar must be focused to listen for keyboard events)                                                   |\n| tabIndex       | Number          | `1`                                                                                                                                  | Tab-index of the calendar                                                                                                                                                                                                        |\n\n### Display Options\n| Property             | Type    | Default      | Description                                                                                                                                      |\n|:---------------------|:--------|:-------------|:-------------------------------------------------------------------------------------------------------------------------------------------------|\n| layout               | String  | `'portrait'` | Layout of the calendar. Should be one of `'portrait'` or `'landscape'`                                                                           |\n| showHeader           | Boolean | `true`       | Show/hide the header                                                                                                                             |\n| shouldHeaderAnimate  | Boolean | `true`       | Enable/Disable the header animation                                                                                                              |\n| showOverlay          | Boolean | `true`       | Show/hide the month overlay when scrolling                                                                                                       |\n| showTodayHelper      | Boolean | `true`       | Show/hide the floating back to `Today` helper                                                                                                    |\n| showWeekdays         | Boolean | `true`       | Show/hide the weekdays in the header                                                                                                             |\n| hideYearsOnSelect    | Boolean | `true`       | Whether to automatically hide the `years` view on select.                                                                                        |\n| overscanMonthCount   | Number  | `4`          | Number of months to render above/below the visible months. Tweaking this can help reduce flickering during scrolling on certain browers/devices. |\n| todayHelperRowOffset | Number  | `4`          | This controls the number of rows to scroll past before the *Today* helper appears                                                                |\n\nExample usage of display options:\n```jsx\n<InfiniteCalendar\n  displayOptions={{\n    layout: 'landscape',\n    showOverlay: false,\n    shouldHeaderAnimate: false\n  }}\n/>\n```\n\nDependencies\n------------\nReact Infinite Calendar has very few dependencies. It relies on [`react-tiny-virtual-list`](https://github.com/clauderic/react-tiny-virtual-list) for virtualization and [`date-fns`](https://github.com/date-fns/date-fns) for handling date manipulation. It also uses [recompose](https://github.com/acdlite/recompose) for extending the default functionality. It also has the following peerDependencies: [`react`](https://www.npmjs.com/package/react), and [`react-addons-css-transition-group`](https://www.npmjs.com/package/react-addons-css-transition-group).\n\nReporting Issues\n----------------\nIf you find an [issue](https://github.com/clauderic/react-infinite-calendar/issues), please report it along with any relevant details to reproduce it. The easiest way to do so is to fork this [jsfiddle](https://jsfiddle.net/clauderic/4rhn03do/).\n\nContributions\n------------\nYes please! Feature requests / pull requests are welcome. [Learn how to contribute](https://github.com/clauderic/react-infinite-calendar/blob/master/CONTRIBUTING.md)\n\nHave a suggestion or just want to say hello? Come chat on [Gitter](https://gitter.im/clauderic/react-infinite-calendar)!\n\nLicense\n---------\n*react-infinite-calendar* is available under the MIT License.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/clauderic/react-infinite-calendar.git"
  },
  "scripts": {
    "build": "npm run clean && nwb build-react-component --no-vendor",
    "clean": "nwb clean-module && nwb clean-demo",
    "lint": "eslint --fix src/**/*.js",
    "start": "nwb serve-react-demo",
    "storybook": "start-storybook -p 9001 -c .storybook",
    "test": "nwb test-react",
    "test:coverage": "nwb test-react --coverage",
    "test:watch": "nwb test-react --server"
  },
  "user": "clauderic",
  "version": "2.2.0"
}
